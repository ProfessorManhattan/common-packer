---
version: '3'

tasks:
  all:
    desc: Lint the project by running all the linters in parallel
    deps: [formatting, packer, vagrant]

  _all:
    deps: [_formatting, _packer, _vagrant]

  formatting:
    deps:
      - :common:nodejs-dependencies
    desc: Lint formatting using Prettier
    summary: |
      $ Report formatting errors with Prettier

      This task will run Prettier on the project and list the possible fixes without automatically
      applying the fixes. It will report mistakes like inconsistent indent lengths, trailing spaces,
      and more. This task is a wrapper for the `npm run lint:prettier` command. It will use the configuration
      specified in the `package.json` file under the `prettier` key.

      If this command is incompatible with a file then you can add the file to the `.prettierignore`
      file.

      For more information on Prettier, see: https://prettier.io/
    cmds:
      - bash .common/log log "Running 'npm run lint:prettier' to check for potentially misformatted files"
      - npm run lint:prettier

  _formatting:
    cmds:
      - task: formatting
    sources:
      - '**/*.(css|html|js|json|less|md|mjml|php|scss|sh|ts|xml|yml)'

  packer:
    deps:
      - :software:packer
    desc: Validate the Packer templates ending with `template.json`
    summary: |
      $ Validate Packer templates

      This task will loop through all the Packer templates ending with `template.json`
      in the root of this project and report any errors that the templates might have.

      For more information on `packer validate`, see: https://www.packer.io/docs/commands/validate
    cmds:
      - bash .common/log log "Validating Packer templates matching the pattern '*template.json' with the 'packer validate' command"
      - |
        for TEMPLATE in *template.json; do
          packer validate "$TEMPLATE"
        done

  scripts:
    deps:
      - :common:nodejs-dependencies
    desc: Report possible errors in shell scripts
    summary: |
      $ Report possible errors in shell scripts using Shellcheck

      Shellcheck is a tool that reports warnings and suggestions for shell (e.g. bash) scripts. This
      task is a wrapper for the `npm run lint:shellcheck` command. The npm command scans the project
      for files ending with `.sh` or `.sh.j2` and runs Shellcheck on them. Files in the following folders
      are ignored:
        * .cache        * .husky
        * .git          * node_modules
        * .husky        * slim_test

      For more information on Shellcheck, see: https://github.com/koalaman/shellcheck
    cmds:
      - bash .common/log log "Running 'npm run lint:shellcheck' to identify possible shell script code violations"
      - npm run lint:shellcheck

  _scripts:
    cmds:
      - task: scripts
    sources:
      - '**/*.(sh|sh.j2)'

  vagrant:
    deps:
      - :software:vagrant
    desc: Validate the Vagrantfile
    summary: |
      $ Validate the Vagrantfile

      This task is an alias for `vagrant validate`. Vagrant's `validate` command
      will ensure the Vagrantfile in the root of this repository has no errors and
      is using valid syntax.

      For more information on `vagrant validate`, see: https://www.vagrantup.com/docs/cli/validate
    cmds:
      - bash .common/log log "Running 'vagrant validate' to validate the Vagrantfile"
      - vagrant validate
