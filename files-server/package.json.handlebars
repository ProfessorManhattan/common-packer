{
  "name": "@{{profile.npmjs_organization}}/{{repository.prefix.github}}{{slug}}",
  "version": "0.0.1",
  "description": "{{description}}",
  "license": "{{license}}",
  "author": "{{author.name}} <{{author.email}}> ({{link.home}})",
  "homepage": "{{link.home}}",
  "repository": {
    "type": "git",
    "url": "git+{{repository.github}}.git"
  },
  "bugs": {
    "email": "{{email.help}}",
    "url": "{{repository.gitlab}}{{repository.location.issues.gitlab}}"
  },
  "type": "module",
  "scripts": {
    "clean": "task common:clean",
    "commit": "task common:commit",
    "fix:shellcheck": "find . -type d \\( -name .cache -o -name .common -o -name .git -o -name .husky -o -name .modules -o -name .task -o -name .venv -o -name node_modules -o -name venv \\) -prune -o -type f \\( -name \\*.custom.sh -o -name \\*.custom.sh.j2 \\) -print0 | xargs -0 shellcheck -f diff | git apply",
    "info": "task --list",
    "lint:shellcheck": "find . -type d \\( -name .cache -o -name .common -o -name .git -o -name .husky -o -name .modules -o -name .task -o -name .venv -o -name node_modules -o -name venv \\) -prune -o -type f \\( -name \\*.custom.sh -o -name \\*.custom.sh.j2 \\) -print0 | xargs -0 -r -n1 shellcheck",
    "prepare": "task common:husky",
    "prepare-release": "task common:prepare-release",
    "requirements": "task common:requirements",
    "reset": "task common:reset",
    "reset-force": "task common:reset-force",
    "update": "task common:update"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "devDependencies": {
    "@commitlint/config-conventional": "^13.1.0",
    "@megabytelabs/prettier-config": "^2.0.0",
    "@prettier/plugin-xml": "^1.0.2",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-formatter-pretty": "^4.1.0",
    "eslint-plugin-jsonc": "^1.6.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-yml": "0.10.1",
    "prettier": "^2.4.0",
    "prettier-plugin-sh": "^0.7.1"
  },
  "keywords": [
    "accelerated",
    "compressed",
    "hyperv",
    "kvm",
    "megabytelabs",
    "optimized",
    "packer",
    "parallels",
    "professormanhattan",
    "qemu",
    "server",
    "virtualbox",
    "vmware",
    "{{slug}}"
  ],
  "engines": {
    "node": ">=10"
  },
  "funding": [
    {
      "type": "opencollective",
      "url": "{{profile_link.opencollective}}/{{profile.opencollective}}"
    },
    {
      "type": "patreon",
      "url": "{{profile_link.patreon}}/{{profile.patreon}}"
    }
  ],
  "lint-staged": {
    "**/*": [
      "blocklint --wordlist blacklist,slave,whitelist",
      "check-merge-conflict",
      "check-added-large-files",
      "check-symlinks",
      "destroyed-symlinks"
    ],
    "**/*.(css|html|json|less|mjml|php|scss|sh|ts)": [
      "prettier --write"
    ],
    "**/*.(jpg|png)": [
      "task image:compress --"
    ],
    "**/*.js": [
      "npx standard --fix",
      "prettier --write"
    ],
    "**/!(package).json": [
      "check-json",
      "task fix:json --",
      "prettier --write"
    ],
    "**/*.md": [
      "prettier --write"
    ],
    "**/*.(sh|sh.j2)": [
      "shellcheck",
      "prettier --write"
    ],
    "**/*.toml": [
      "check-toml",
      "prettier --write"
    ],
    "**/*.xml": [
      "check-xml",
      "prettier --write"
    ],
    "**/*.yml": [
      "check-yaml",
      "yamllint -s",
      "task fix:yaml --",
      "prettier --write"
    ],
    "logo.png": [
      "task image:resize -- 200 200",
      "task image:compress --"
    ],
    "package.json": [
      "check-json",
      "task fix:json --",
      "prettier-package-json --write"
    ],
    "requirements.txt": [
      "requirements-txt-fixer"
    ],
    "**/*.{sh,sh.j2}": [],
    "scripts/*.custom.sh": [
      "prettier --write",
      "shellcheck"
    ],
    "*template.json": [
      "packer validate"
    ],
    "Vagrantfile": [
      "vagrant validate"
    ]
  },
  "prettier": "@megabytelabs/prettier-config",
  "standard-version": {
    "scripts": {
      "prerelease": "git add --all",
      "prebump": "jq -r '.variables.iso_version' template.json",
      "pretag": "PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]') && if git show-ref --tags v$PACKAGE_VERSION --quiet; then git tag -d v$PACKAGE_VERSION; fi"
    }
  }
}
